package xlsys.base.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * This class is automatically generated by the program of Lewis.
 * @author Lewis
 *
 */
public class ViewModel implements ITableModel
{
	private static final long serialVersionUID = 8458775315648942208L;
	
	private BigDecimal viewid;
	private String name;
	private BigDecimal uimid;
	private String diyimpl;
	private BigDecimal relationtype;
	private BigDecimal parentviewid;
	private String innerlisteners;
	private byte[] scriptlistener;
	private String reflecttable;
	private String selectbody;
	private String frombody;
	private String wherebody;
	private String groupbybody;
	private String orderbybody;
	private String wholesql;
	private String treecolname;
	private List<ViewParamModel> viewParamList;
	private List<ViewColumnModel> viewColumnList;
	private List<ViewQueryParamModel> viewQueryParamList;

	protected ViewModel() {}

	public ViewModel(BigDecimal viewid)
	{
		this.viewid = viewid;
	}

	public BigDecimal getViewid()
	{
		return viewid;
	}

	protected void setViewid(BigDecimal viewid)
	{
		this.viewid = viewid;
	}

	public String getName()
	{
		return name;
	}

	public void setName(String name)
	{
		this.name = name;
	}

	public BigDecimal getUimid()
	{
		return uimid;
	}

	public void setUimid(BigDecimal uimid)
	{
		this.uimid = uimid;
	}

	public String getDiyimpl()
	{
		return diyimpl;
	}

	public void setDiyimpl(String diyimpl)
	{
		this.diyimpl = diyimpl;
	}

	public BigDecimal getRelationtype()
	{
		return relationtype;
	}

	public void setRelationtype(BigDecimal relationtype)
	{
		this.relationtype = relationtype;
	}

	public BigDecimal getParentviewid()
	{
		return parentviewid;
	}

	public void setParentviewid(BigDecimal parentviewid)
	{
		this.parentviewid = parentviewid;
	}

	public String getInnerlisteners()
	{
		return innerlisteners;
	}

	public void setInnerlisteners(String innerlisteners)
	{
		this.innerlisteners = innerlisteners;
	}

	public byte[] getScriptlistener()
	{
		return scriptlistener;
	}

	public void setScriptlistener(byte[] scriptlistener)
	{
		this.scriptlistener = scriptlistener;
	}

	public String getReflecttable()
	{
		return reflecttable;
	}

	public void setReflecttable(String reflecttable)
	{
		this.reflecttable = reflecttable;
	}

	public String getSelectbody()
	{
		return selectbody;
	}

	public void setSelectbody(String selectbody)
	{
		this.selectbody = selectbody;
	}

	public String getFrombody()
	{
		return frombody;
	}

	public void setFrombody(String frombody)
	{
		this.frombody = frombody;
	}

	public String getWherebody()
	{
		return wherebody;
	}

	public void setWherebody(String wherebody)
	{
		this.wherebody = wherebody;
	}

	public String getGroupbybody()
	{
		return groupbybody;
	}

	public void setGroupbybody(String groupbybody)
	{
		this.groupbybody = groupbybody;
	}

	public String getOrderbybody()
	{
		return orderbybody;
	}

	public void setOrderbybody(String orderbybody)
	{
		this.orderbybody = orderbybody;
	}

	public String getWholesql()
	{
		return wholesql;
	}

	public void setWholesql(String wholesql)
	{
		this.wholesql = wholesql;
	}

	public String getTreecolname()
	{
		return treecolname;
	}

	public void setTreecolname(String treecolname)
	{
		this.treecolname = treecolname;
	}

	public List<ViewParamModel> getViewParamList()
	{
		return viewParamList;
	}

	public void setViewParamList(List<ViewParamModel> viewParamList)
	{
		this.viewParamList = viewParamList;
	}

	public void addViewParam(ViewParamModel viewParam)
	{
		if(viewParamList==null) viewParamList = new ArrayList<ViewParamModel>();
		viewParamList.add(viewParam);
	}

	public List<ViewColumnModel> getViewColumnList()
	{
		return viewColumnList;
	}

	public void setViewColumnList(List<ViewColumnModel> viewColumnList)
	{
		this.viewColumnList = viewColumnList;
	}

	public void addViewColumn(ViewColumnModel viewColumn)
	{
		if(viewColumnList==null) viewColumnList = new ArrayList<ViewColumnModel>();
		viewColumnList.add(viewColumn);
	}
	
	public ViewColumnModel getViewColumnModel(BigDecimal idx)
	{
		ViewColumnModel vcm = null;
		if(viewColumnList!=null)
		{
			for(ViewColumnModel temp : viewColumnList)
			{
				if(temp.getIdx().equals(idx))
				{
					vcm = temp;
					break;
				}
			}
		}
		return vcm;
	}

	public List<ViewQueryParamModel> getViewQueryParamList()
	{
		return viewQueryParamList;
	}

	public void setViewQueryParamList(List<ViewQueryParamModel> viewQueryParamList)
	{
		this.viewQueryParamList = viewQueryParamList;
	}

	public void addViewQueryParam(ViewQueryParamModel viewQueryParam)
	{
		if(viewQueryParamList==null) viewQueryParamList = new ArrayList<ViewQueryParamModel>();
		viewQueryParamList.add(viewQueryParam);
	}
	
	public ViewQueryParamModel getViewQueryParamModel(BigDecimal idx)
	{
		ViewQueryParamModel vqpm = null;
		if(viewQueryParamList!=null)
		{
			for(ViewQueryParamModel temp : viewQueryParamList)
			{
				if(temp.getIdx().equals(idx))
				{
					vqpm = temp;
					break;
				}
			}
		}
		return vqpm;
	}

	@Override
	public String getRefTableName()
	{
		return "xlv2_view";
	}
}